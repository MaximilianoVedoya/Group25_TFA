from django.core.management.base import BaseCommand, CommandError
from django.db import models
#from sightings.models import new_sighting
from datetime import datetime
import csv

class Command(BaseCommand):
    """
    Easily export a model's objects in csv format.  In this example the csv can be generated by executing:
    ./manage.py export your_model
    """

    def your_model(self):
        from sightings.models import new_sighting
        meta = {
            'file': '/tmp/your_model.csv',
            'class': new_sighting,
            'fields': ('Longitude', 'Latitude','Unique_Squirrel_ID', 'Hectare', 'Shift', 'Date', 'Hectare_Squirrel_Number', 'Age', 
                    'Primary_Fur_Color','Location','Specific_Location','Running','Chasing', 'Climbing','Eating' ,'Foraging','Other_Activities' , 'Kuks','Quaas', 'Moans', 'Tail_flags', 'Tail_twitches', 'Approaches', 'Indifferent', ' Runs_from')

        }
        self._write_csv(meta)

    def _write_csv(self, meta):
        """
        :param meta: (dict) keys should be 'file' (string: absolute path), 'class' the Python class
        object, 'fields' a list or tuple of field model field names (strings)
        """
        f = open(meta['file'], 'w+')
        writer = csv.writer(f, encoding='utf-8')
        writer.writerow( meta['fields'] )
        for obj in meta['class'].objects.all():
            row = [unicode(getattr(obj, field)) for field in meta['fields']]
            writer.writerow(row)
        f.close()